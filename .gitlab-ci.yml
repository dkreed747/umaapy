image: "python:3.13-slim"

stages:
  - lint
  - build
  - test
  - deploy

lint:
  stage: lint
  tags:
    - dkr-run
  before_script:
    - pip install black
  script:
    - black --check --diff ./src/umaapy

container:
  stage: build
  tags:
    - dkr-run
  image: docker:stable
  script:
    - docker info
    - echo "$REGISTRY_TOKEN" | docker login --username "$REGISTRY_USER" --password-stdin "$REGISTRY"
    - docker build --target develop -f ./Dockerfile -t dkreed747/umaapy-dev:latest .
    - docker push dkreed747/umaapy-dev:latest
  artifacts:
    expire_in: 1h
    reports: {}

test:
  stage: test
  tags:
    - dkr-run
  image: dkreed747/umaapy-dev:latest
  needs:
    - job: container
      artifacts: false
  before_script:
    - rtiddsgen -language Python -inputIdl idls/UMAA -r -I idls -joinInputFiles -joinedFilesOutputName types -d ./src/umaapy
    - pip install --upgrade pip
    - pip install -e .
  script:
    - pytest --maxfail=1 --disable-warnings -q
  artifacts:
    when: always
    reports:
      junit: report.xml
    paths:
      - .pytest_cache/

package:
  stage: deploy
  tags:
    - dkr-run
  image: dkreed747/umaapy-dev:latest
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - pip install --upgrade pip
    - pip install build twine
    - cp "$RTI_LICENSE" "$RTI_LICENSE_FILE"
  script:
    - rtiddsgen -language Python -inputIdl idls/UMAA -r -I idls -joinInputFiles -joinedFilesOutputName types -d ./src/umaapy
    - python -m build --sdist --wheel --outdir dist/
    - |
      TWINE_USERNAME="__token__" \
      TWINE_PASSWORD="$CI_JOB_TOKEN" \
      twine upload \
        --repository-url "$PACKAGE_REGISTRY_URL" \
        dist/*
  artifacts:
    paths:
      - dist/
    expire_in: 1 hour
